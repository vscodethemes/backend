// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: image_mutations.sql

package db

import (
	"context"
)

const upsertImage = `-- name: UpsertImage :one
insert into "images" (
  "theme_id",
  "language", 
  "type",
  "format",
  "url"
)
values (
  $1, 
  $2, 
  $3, 
  $4,
  $5
)
on conflict("theme_id", "language", "type",  "format") do update set
  "url" = excluded."url",
  "updated_at" = now()
returning id, theme_id, language, type, format, url, created_at, updated_at
`

type UpsertImageParams struct {
	ThemeID  int64
	Language string
	Type     string
	Format   string
	Url      string
}

func (q *Queries) UpsertImage(ctx context.Context, arg UpsertImageParams) (Image, error) {
	row := q.db.QueryRow(ctx, upsertImage,
		arg.ThemeID,
		arg.Language,
		arg.Type,
		arg.Format,
		arg.Url,
	)
	var i Image
	err := row.Scan(
		&i.ID,
		&i.ThemeID,
		&i.Language,
		&i.Type,
		&i.Format,
		&i.Url,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

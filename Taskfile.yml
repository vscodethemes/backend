version: "3"

env: 
  DB_URL: postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable
  DBMATE_MIGRATIONS_DIR: ./internal/db/migrations
  DBMATE_SCHEMA_FILE: ./internal/db/schema.sql
  API_PORT: 8080

tasks:
  api:
    desc: Start the api server.
    deps:
      - db-wait
      - generate-keyset
    cmds:
      - go run cmd/api/main.go --database-url "$DB_URL&application_name=api" --port $API_PORT 
  
  workers:
    desc: Start the workers server.
    deps:
      - db-wait
    cmds:
      - go run cmd/workers/main.go --database-url "$DB_URL&application_name=workers" --dir ./data --max-extensions 10

  generate-sqlc:
    desc: Generate SQLC.
    cmds:
      - go run github.com/sqlc-dev/sqlc/cmd/sqlc generate
  
  db:
    desc: Start the database
    cmds:
      - docker compose up db

  db-wait:
    desc: Wait for the database to be ready
    cmds:
      - go run github.com/amacneil/dbmate -u $DB_URL wait 
  
  migrate-up: 
    desc: Run migrations
    cmds:
      - go run github.com/amacneil/dbmate -u $DB_URL up 
  
  migrate-down: 
    desc: Rollback migrations
    cmds:
      - go run github.com/amacneil/dbmate -u $DB_URL down
 
  schema-dump: 
    desc: Dump the database schema
    cmds:
      - go run github.com/amacneil/dbmate -u $DB_URL dump

  create-migration: 
    desc: Create a new migration file
    cmds:
      - go run github.com/amacneil/dbmate new {{.CLI_ARGS}}

  river:
    desc: Run the river command
    cmds:
      -  go run github.com/riverqueue/river/cmd/river {{.CLI_ARGS}}

  river-ui:
    desc: Start the riverui server
    cmds:
      - docker compose up riverui
  
  lint:
    desc: Run linters
    cmds:
      - go run github.com/golangci/golangci-lint/cmd/golangci-lint run

  objectstore:
    desc: Start objectstore
    cmds:
      - docker compose up objectstore

  generate-keyset:
    desc: Generate keyset
    cmds:
      - go run cmd/generate-keyset/main.go
      
  generate-jwt:
    desc: Generate JWT
    cmds:
      - go run cmd/generate-jwt/main.go --issuer localhost:$API_PORT
  
  pg-dump:
    desc: Dump the database
    cmds:
      - pg_dump $DB_URL > ./data/dump.sql